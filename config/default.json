{
    "collections": [
        {
            "name": "composer",
            "humanName": "Composer",
            "backboneForms": {
                "schema": {
                    "fullname": { "type": "Text", "title": "Full Name" },
                    "birth_year": { "type": "Number", "title": "Birth Year" },
                    "death_year": { "type": "Number", "title": "Death Year" },
                    "wiki.en.source_url": { "type": "Text", "title": "Source URL" },
                    "wiki.en.source_name": { "type": "Text", "title": "Source Name" },
                    "wiki.en.content": { "type": "TextArea", "title": "Content" },
                    "wiki.es.source_url": { "type": "Text", "title": "Source URL" },
                    "wiki.es.source_name": { "type": "Text", "title": "Source Name" },
                    "wiki.es.content": { "type": "TextArea", "title": "Content" },
                    "wiki.it.source_url": { "type": "Text", "title": "Source URL" },
                    "wiki.it.source_name": { "type": "Text", "title": "Source Name" },
                    "wiki.it.content": { "type": "TextArea", "title": "Content" },
                    "uri": {
                        "type": "Text",
                        "validators": [
                            "required"
                            // TODO there's a bug in node-config with deep config files... this level isn't reached properly
                            //, { "type": "regaexp", "regaexp": "/^[0-9a-zA-Z-]{3,}$/g" }
                        ]
                    },
                    "created": { "type": "DateTime" },
                    "updated": { "type": "DateTime" },
                    "categories": { "type": "List", "itemType": "NestedModel", "model": "${Backbone.Model.ComposerCategory}", "title": "Categories" }
                },
                "fieldsets": [
                    {
                        "legend": "Basic Information",
                        "fields": ["fullname", "birth_year", "death_year"]
                    },
                    {
                        "legend": "Wiki (English)",
                        "fields": ["wiki.en.content", "wiki.en.source_name", "wiki.en.source_url"]
                    },
                    {
                        "legend": "Wiki (Spanish)",
                        "fields": ["wiki.es.content", "wiki.es.source_name", "wiki.es.source_url"]
                    },
                    {
                        "legend": "Wiki (Italian)",
                        "fields": ["wiki.it.content", "wiki.it.source_name", "wiki.it.source_url"]
                    },
                    {
                        "legend": "System Data",
                        "fields": ["uri", "created", "updated"]
                    },
                    {
                        "legend": "Categories",
                        "fields": ["categories"]
                    }
                ],
                "defaults": {
                    "birth_year": 1800,
                    "death_year": 1890
                }
            },
            "fastSearch": {
                "find": { "fullname": "(^|\\W*):q" },
                "sort": { "updated": -1 },
                "limit": 10,
                "columns": ["fullname", "uri", "created", "updated"]
            },
            "relations": { // mongorilla notation
                "categories": {
                    "type": "HasMany",
                    "relatedCollection": "composerCategory"
                },
                "periods": {
                    "type": "HasMany",
                    "relatedCollection": "period"
                },
                "opuses": {
                    "type": "HasMany",
                    "relatedCollection": "opus"
                }
            },
            "mongoose": {
                "schema": null
            }
        },
        {
            "name": "composerCategory",
            "humanName": "Composer Category",
            "backboneForms": {
                "schema": {
                    "name": { "type": "Text", "name": "Full Name" },
                    "description": { "type": "TextArea" },
                    "uri": { "validators": ["required"] },
                    "created": { "type": "DateTime" },
                    "updated": { "type": "DateTime" }
                }
            },
            "fastSearch": {
                "find": { "name": "(^|\\W*):q" },
                "sort": { "updated": -1 },
                "limit": 10,
                "columns": ["name", "uri", "created", "updated"]
            },
            "mongoose": {
                "schema": null
            }
        },
        {
            "name": "instrument",
            "humanName": "Instrument",
            "backboneForms": {
                "schema": {
                    "name": { "type": "Text", "name": "Full Name" },
                    "description": { "type": "TextArea" },
                    "uri": { "validators": ["required"] },
                    "created": { "type": "DateTime" },
                    "updated": { "type": "DateTime" }
                }
            },
            "fastSearch": {
                "find": { "name": "(^|\\W*):q" },
                "sort": { "updated": -1 },
                "limit": 10,
                "columns": ["name", "uri", "created", "updated"]
            },
            "mongoose": {
                "schema": null
            }
        },
        {
            "name": "opus",
            "humanName": "Opus",
            "backboneForms": {
                "schema": {
                    "name": { "type": "Text", "name": "Full Name" },
                    "description": { "type": "TextArea" },
                    "uri": { "validators": ["required"] },
                    "created": { "type": "DateTime" },
                    "updated": { "type": "DateTime" }
                }
            },
            "fastSearch": {
                "find": { "name": "(^|\\W*):q" },
                "sort": { "updated": -1 },
                "limit": 10,
                "columns": ["name", "uri", "created", "updated"]
            },
            "mongoose": {
                "schema": null
            }

        },
        {
            "name": "period",
            "humanName": "Period",
            "backboneForms": {
                "schema": {
                    "name": { "type": "Text", "name": "Full Name" },
                    "description": { "type": "TextArea" },
                    "uri": { "validators": ["required"] },
                    "created": { "type": "DateTime" },
                    "updated": { "type": "DateTime" }
                }
            },
            "fastSearch": {
                "find": { "name": "(^|\\W*):q" },
                "sort": { "updated": -1 },
                "limit": 10,
                "columns": ["name", "uri", "created", "updated"]
            },
            "mongoose": {
                "schema": null
            }
        },
        {
            "name": "score",
            "humanName": "Score",
            "backboneForms": {
                "schema": {
                    "name": { "type": "Text", "name": "Full Name" },
                    "description": { "type": "TextArea" },
                    "uri": { "validators": ["required"] },
                    "created": { "type": "DateTime" },
                    "updated": { "type": "DateTime" }
                }
            },
            "fastSearch": {
                "find": { "name": "(^|\\W*):q" },
                "sort": { "updated": -1 },
                "limit": 10,
                "columns": ["name", "uri", "created", "updated"]
            },
            "mongoose": {
                "schema": null
            }
        }
    ]
}
